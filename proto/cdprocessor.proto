syntax = "proto3";

package cdprocessor;

option go_package = "github.com/brotherlogic/cdprocessor/proto";

import "github.com/brotherlogic/recordcollection/proto/recordcollection.proto";

message Config {
  map<int32,int64> last_process_time = 1;
  map<int32,int32> issue_mapping = 2;
  map<int32,int64> last_rip_time = 3;
}

message GetRippedRequest {}

message Track {
  int32 disk = 5;
  int32 track_number = 1;
  string wav_path = 2;
  string mp3_path = 3;
  string flac_path = 4;
}

message Rip {
  int32 id = 1;
  string path = 2;
  repeated Track tracks = 3;
}

message GetRippedResponse {
  repeated Rip ripped = 1;
}

message GetMissingRequest {}

message GetMissingResponse {
  repeated recordcollection.Record missing = 1;
}

message ForceRequest {
  enum ForceType {
    UNKNOWN = 0;
    RECREATE_LINKS = 1;
  }
  ForceType type = 1;
  int32 id = 2;
}

message ForceResponse {}

message GetOutstandingRequest {}
message GetOutstandingResponse {
  repeated int32 ids = 1;
}

service CDProcessor {
  rpc GetRipped (GetRippedRequest) returns (GetRippedResponse);
  rpc GetMissing (GetMissingRequest) returns (GetMissingResponse);
  rpc Force (ForceRequest) returns (ForceResponse);
  rpc GetOutstanding (GetOutstandingRequest) returns (GetOutstandingResponse);
}
